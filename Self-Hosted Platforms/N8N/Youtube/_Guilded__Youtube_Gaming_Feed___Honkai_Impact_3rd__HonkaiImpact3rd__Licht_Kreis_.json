{
  "name": "(Guilded) Youtube Gaming Feed - Honkai Impact 3rd @HonkaiImpact3rd [Licht Kreis]",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyHour"
            }
          ]
        },
        "feedUrl": "https://www.youtube.com/feeds/videos.xml?channel_id=UCko6H6LokKM__B03i5_vBQQ"
      },
      "id": "4b3ad564-6043-4052-a60b-34c838bd99e3",
      "name": "RSS Feed Trigger",
      "type": "n8n-nodes-rss-feed-trigger.rssFeedTrigger",
      "typeVersion": 1,
      "position": [
        760,
        380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1fc495ed-a336-4428-9854-122d11602b6e",
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        1200,
        260
      ]
    },
    {
      "parameters": {
        "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCko6H6LokKM__B03i5_vBQQ",
        "options": {}
      },
      "id": "d49f6731-cf88-4084-ac02-c854fa3ea48b",
      "name": "HTTP Request - Youtube API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        980,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return $json.feed.entry[0];"
      },
      "id": "b365dccd-0a85-494c-a8b8-98eb2e333732",
      "name": "Filter Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1400,
        140
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function convertTimestamp(inputTimestamp) {\n  const dateObj = new Date(inputTimestamp);\n  const options = { weekday: 'short', day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZone: 'GMT', timeZoneName: 'short' };\n  return dateObj.toLocaleString('en-US', options);\n}\n\nconst iconUrlFinal = 'https://yt3.googleusercontent.com/yj6JsQllxXkGpuUSf5jTBWLHO-D0Y9EmGi_bqmP76RvAm5tGm4zcQI1BTmg2mEf_KykqpBka=s176-c-k-c0x00ffffff-no-rj';\nconst nameInit = $('RSS Feed Trigger').item.json['author'];\n\nconst thumbnailUrl = $('Set').item.json.data[0].snippet.thumbnails.maxres\n  ? $('Set').item.json.data[0].snippet.thumbnails.maxres.url\n  : $('Set').item.json.data[0].snippet.thumbnails.standard.url;\n\n\nconst inputTimestamp = $('RSS Feed Trigger').item.json.pubDate;\nconst convertedTimestamp = convertTimestamp(inputTimestamp);\n\nconst textMod = String.prototype.concat(\"Youtube â€¢ \", convertedTimestamp);\n\nlet descriptionHyperlinked = $('Filter Code').item.json['media:group']['media:description'];\n// Use a regular expression to search for URLs within the description field\nconst urlRegex = /(https?:\\/\\/[^\\s]+)/g;\ndescriptionHyperlinked = descriptionHyperlinked.replace(urlRegex, '[$1]($1)');\n// Regular expression pattern to match hashtags\nconst hashtagRegex = /(^|\\s)(#[^\\s]+)/g;\n// Find all the hashtags in the description string\nconst hashtags = descriptionHyperlinked.match(hashtagRegex);\n// Replace the hashtags with URLs\nif (hashtags) {\n  hashtags.forEach(hashtag => {\n    const cleanHashtag = hashtag.substring(1); // Remove the '#' symbol\n    const hashtagUrl = `https://www.youtube.com/hashtag/${cleanHashtag.toLowerCase().replace('#', '')}`;\n    const hashtagLink = `[${hashtag}](${hashtagUrl})`; // Include the '#' symbol\n    descriptionHyperlinked = descriptionHyperlinked.replace(hashtag, `${hashtagLink}`);\n  });\n}\n\n// Regular expression pattern to match @ mentions\nconst mentionRegex = /(^|\\s)@(\\w+)/g;\n// Find all the @ mentions in the description string\nconst mentions = descriptionHyperlinked.match(mentionRegex);\n// Replace the @ mentions with URLs\nif (mentions) {\n  mentions.forEach(mention => {\n    const mentionWithoutSpace = mention.replace(/\\s/g, ''); // Remove any spaces before the mention\n    const username = mentionWithoutSpace.substring(1);\n    const mentionUrl = `https://youtube.com/${username}`;\n    const mentionLink = ` [@${username}](${mentionUrl})`; // Include the '@' symbol\n    descriptionHyperlinked = descriptionHyperlinked.replace(mention, mentionLink);\n  });\n}\n\n\nlet embed = {\n    color: 16711680,\n    author: {\n      name: nameInit,\n      url: $(\"RSS Feed Trigger\").item.json.link,\n      icon_url: iconUrlFinal,\n    },\n    url: $(\"RSS Feed Trigger\").item.json['link'],\n    image: {\n      url: thumbnailUrl,\n    },\n    footer: {\n      text: textMod,\n      icon_url: 'https://i.imgur.com/0Ap4FTE.png',\n    },\n  };\n    embed.title = $('RSS Feed Trigger').item.json['title'];\n    embed.description = descriptionHyperlinked;\n  const body = {\n    embeds: [embed],\n  };\n  return { body };"
      },
      "id": "3880171f-ac25-4a89-b060-0d4617ecc744",
      "name": "Main Driver Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1800,
        140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://media.guilded.gg/webhooks/REDACTED",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body }}",
        "options": {}
      },
      "id": "aeb6b426-f272-4dee-863a-ee9191651a44",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1960,
        260
      ]
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/youtube/v3/videos?id={{ $json['yt:videoId'] }}&key=REDACTED&part=snippet&fields=items/snippet/thumbnails",
        "options": {}
      },
      "id": "c44a0743-51a7-4699-9143-419dfae237ea",
      "name": "Youtube Data API V3 HTTP",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1500,
        380
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.items }}"
            },
            {
              "name": "data[0]",
              "value": "={{ $json.items[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2625f803-c190-4fe1-8b53-5d2df83515ef",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1640,
        260
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "RSS Feed Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request - Youtube API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "Filter Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Youtube API": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Code": {
      "main": [
        [
          {
            "node": "Youtube Data API V3 HTTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Main Driver Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Data API V3 HTTP": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Main Driver Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "6ac18684-3d8c-4e28-a4e1-9b536b212a0c",
  "id": "14",
  "meta": {
    "instanceId": "01619de8899effb1dbd7cfa6a38e0d6d6f87415b7b3e7d7a9516ce51b97da336"
  },
  "tags": []
}