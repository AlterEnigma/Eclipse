{
  "name": "(Guilded) Pixiv AI Artist RSS Feed - イベリコ豚 [Luminis Nobilite]",
  "nodes": [
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function convertTimestamp(inputTimestamp) {\n  const dateObj = new Date(inputTimestamp);\n  const options = {\n    weekday: 'short',\n    day: '2-digit',\n    month: 'short',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    timeZone: 'GMT',\n    timeZoneName: 'short',\n  };\n  return dateObj.toLocaleString('en-US', options);\n}\n\n\nconst inputTimestamp = $('RSS Feed Trigger').item.json.pubDate;\nconst convertedTimestamp = convertTimestamp(inputTimestamp);\nconst inputData = $('RSS Feed Trigger').item.json.content;\n// Regex pattern to match the <img src> URL\nconst regex = /<img[^>]+src=\"([^\">]+)\"/g;\nconst imgSrcUrls = [];\nlet match;\n// Extract all <img src> URLs using regex\nwhile ((match = regex.exec(inputData)) !== null) {\n  imgSrcUrls.push(match[1]);\n}\nconst convertedUrls = imgSrcUrls.map((url, index) => {\n  return url;\n});\n\n\nconst maxEmbeds = 10; // Maximum number of embeds to send\nconst totalEmbeds = convertedUrls.length;\nconst numMessages = Math.ceil(totalEmbeds / maxEmbeds);\nconst payloads = [];\n\n\nfor (let i = 0; i < numMessages; i++) {\n  const start = i * maxEmbeds;\n  const end = start + maxEmbeds;\n  const embeds = convertedUrls\n    .slice(start, end)\n    .map((url, index) => {\n      const entryNumber = start + index + 1; // Entry number starts from 1\n      let titleInit = $('RSS Feed Trigger').item.json.title;\n      if (convertedUrls.length > 1) {\n        titleInit = `${titleInit} [${entryNumber}]`;\n      }\n      return {\n        color: 40191,\n        author: {\n          name: $('RSS Feed Trigger').item.json.author,\n          url: 'https://www.pixiv.net/en/users/44781013',\n          icon_url: 'https://i.imgur.com/GtoimBc.png',\n        },\n        title: titleInit,\n        url: $('RSS Feed Trigger').item.json.link,\n        image: {\n          url: url,\n        },\n        footer: {\n          text: String.prototype.concat('Pixiv • ', convertedTimestamp),\n          icon_url: 'https://i.imgur.com/jckoLce.png',\n        },\n      };\n    });\n  const body = { embeds };\n  payloads.push({ body });\n}\n\n\nreturn { payloads };"
      },
      "id": "a9893806-8c70-456a-a37d-96f9e530c207",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        860,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://media.guilded.gg/webhooks/REDACTED",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payloads[0].body }}",
        "options": {}
      },
      "id": "bcd29ef8-8072-49d3-9a55-da724a6369e7",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1300,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://media.guilded.gg/webhooks/REDACTED",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payloads[1].body }}",
        "options": {}
      },
      "id": "27375ce3-796b-4316-81db-2543eb2dcf77",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1300,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payloads[1] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "6b194920-0042-40bd-95a0-9b00a6f50408",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1060,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payloads[2] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "0567231c-d148-4dea-a0c4-47db603c634f",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1060,
        900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://media.guilded.gg/webhooks/REDACTED",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payloads[2].body }}",
        "options": {}
      },
      "id": "5dc3d23b-103b-4ad8-af7e-ae7215d1f0de",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1300,
        980
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyHour"
            }
          ]
        },
        "feedUrl": "https://rsshub.app/pixiv/user/44781013"
      },
      "id": "0b182417-20a2-4e28-a8cf-dc70f8e5bbb4",
      "name": "RSS Feed Trigger",
      "type": "n8n-nodes-base.rssFeedReadTrigger",
      "typeVersion": 1,
      "position": [
        680,
        620
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Feed Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v1"
  },
  "versionId": "faa08442-2e87-47f4-8afc-1b44b8de492b",
  "id": "41",
  "meta": {
    "instanceId": "f3e8646dc25bb703680f7fd48308e56289d71dc10dc3ea0c5d57254342b6a676"
  },
  "tags": []
}