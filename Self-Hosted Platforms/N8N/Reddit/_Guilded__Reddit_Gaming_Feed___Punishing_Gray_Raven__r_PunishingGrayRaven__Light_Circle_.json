{
  "name": "(Guilded) Reddit Gaming Feed - Punishing Gray Raven /r/PunishingGrayRaven [Light Circle]",
  "nodes": [
    {
      "parameters": {
        "url": "=https://www.reddit.com/user/{{ $json.author.replace('/u/', '') }}/about.json",
        "options": {}
      },
      "id": "c864a0f2-1173-448f-b4cc-d17aa7157603",
      "name": "Reddit API GET Request - User Icon URL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1080,
        580
      ]
    },
    {
      "parameters": {
        "textsWithManipulations": {
          "textsWithManipulationsValues": [
            {
              "dataSources": {
                "dataSource": [
                  {
                    "readOperation": "fromJSON",
                    "sourceKey": "contentSnippet",
                    "destinationKey": "contentSnippet"
                  }
                ]
              },
              "manipulations": {
                "manipulation": [
                  {
                    "action": "replace",
                    "replaceMode": "regex",
                    "regex": "/[-_*]{3,}/gm"
                  },
                  {
                    "action": "replace",
                    "replaceMode": "extendedSubstring",
                    "substring": "submitted by "
                  },
                  {
                    "action": "replace",
                    "replaceMode": "regex",
                    "regex": "/\\/u\\/[A-Za-z0-9_-]+/g"
                  },
                  {
                    "action": "replace",
                    "replaceMode": "extendedSubstring",
                    "substring": "[link]"
                  },
                  {
                    "action": "replace",
                    "replaceMode": "extendedSubstring",
                    "substring": "[comments]"
                  }
                ]
              }
            }
          ]
        }
      },
      "id": "a366ee79-c07e-4f5a-8dda-ad96b15a5b27",
      "name": "TextManipulation",
      "type": "n8n-nodes-text-manipulation.textManipulation",
      "typeVersion": 1,
      "position": [
        900,
        580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://media.guilded.gg/webhooks/REDACTED",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body }}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 10,
              "batchInterval": 10000
            }
          }
        }
      },
      "id": "5d064914-89eb-41e7-b8f8-3fa012a562b5",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1440,
        580
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function convertTimestamp(inputTimestamp) {\n  const dateObj = new Date(inputTimestamp);\n  const options = { weekday: 'short', day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZone: 'GMT', timeZoneName: 'short' };\n  return dateObj.toLocaleString('en-US', options);\n}\n\n\nconst inputTimestamp = $('RSS Feed Trigger').first().json.pubDate;\nconst convertedTimestamp = convertTimestamp(inputTimestamp);\n\n\nconst authorInit = $('RSS Feed Trigger').first().json.author;\nconst authorFinal = authorInit.replace(/\\/u\\//g, \"\");\nconst authorSnippet = \"submitted by \" + authorInit + \" [link] [comments]\";\nconst user_link = `https://reddit.com/user/${authorFinal}`;\nconst originalUserIconURL = $('Reddit API GET Request - User Icon URL').first().json.data.icon_img;\nconst user_iconUrl = originalUserIconURL.replace(/\\.(jpg|jpeg|png).*/, '.$1');\nconst inputContent = $('RSS Feed Trigger').first().json.content;\nconst regex = /<img\\s+[^>]*src=\"([^\"]+)\"[^>]*>/g;\nconst match = regex.exec(inputContent);\n\n\nconst subredditRegex = /(\\/r\\/[^/]+)/;\nconst subreddit_urlInit = $('RSS Feed Trigger').first().json.link\nconst subreddit_urlMatch = subreddit_urlInit.match(subredditRegex);\nconst subreddit_urlFinal = subreddit_urlMatch ? subreddit_urlMatch[1] : null;\nconst nameInit = $('RSS Feed Trigger').first().json.author;\nconst nameFinal = String.prototype.concat(nameInit, \" in \", subreddit_urlFinal)\nconst textMod = String.prototype.concat(\"Reddit â€¢ \", convertedTimestamp);\n\n\n// Extracting text between <p> tags\nconst textRegex = /<p>(.*?)<\\/p>/gs;\nconst textMatches = inputContent.matchAll(textRegex);\nconst paragraphs = Array.from(textMatches, match => match[1]);\n\n// Concatenating paragraphs with line breaks\nconst text = paragraphs.join('\\n\\n');\n\n// Decoding HTML entities\nconst decoded_text = text.replace(/&#(\\d+);/g, (match, dec) => String.fromCharCode(dec));\n\n// Extracting image URL\nconst linkRegex = /<span><a href=\"([^\"]+)\">\\[link\\]<\\/a><\\/span>/;\nconst linkMatch = inputContent.match(linkRegex);\nlet image_url = null;\n\n\n\n// Priority to i.redd.it URLs\nconst imageRegex = /https:\\/\\/i\\.redd\\.it\\/([^\\/]+)\\.(gif|jpeg|jpg|png)/;\nconst imageMatches = inputContent.match(imageRegex);\nif (imageMatches) {\n  image_url = `https://i.redd.it/${imageMatches[1]}.${imageMatches[2]}`;\n}\n\n\n// Fallback to img src if image URL is not found\nif (!image_url) {\n  const imgRegex = /<img src=\"([^\"]+)\"/;\n  const imgMatch = inputContent.match(imgRegex);\n  image_url = imgMatch ? imgMatch[1] : null;\n}\n\n// Further processing if needed, such as removing unnecessary details from the URL\n// For example, if you want to remove query parameters like \"?width=640&crop=smart&auto=webp&s=c154978775f0f11fbec6ac33e1ce01c1b53df5b4\"\nif (image_url && image_url.startsWith('https://preview.redd.it')) {\n  image_url = image_url.split('?')[0]; // Keep only the part before the query string\n}\n\n// Formatting links to Discord hyperlink format\nconst formatted_text = decoded_text.replace(/<a href=\"([^\"]+)\">(.*?)<\\/a>/g, '[$2]($1)');\n\nconst contentSnippet = $('TextManipulation').first().json.contentSnippet;\nconst maxSnippetLength = 2000;\n\nlet snippet = contentSnippet;\nif (snippet.length > maxSnippetLength) {\n  snippet = snippet.substring(0, maxSnippetLength);\n  // Trim the snippet to the last complete word\n  snippet = snippet.substring(0, snippet.lastIndexOf(' ')) + '...';\n}\n\n\nlet embed = {\n  color: 16733952,\n  author: {\n    name: nameFinal,\n    url: user_link,\n    icon_url: user_iconUrl,\n  },\n  url: $(\"RSS Feed Trigger\").first().json['link'],\n  footer: {\n    text: textMod,\n    icon_url: 'https://raw.githubusercontent.com/LightCircleLLC/Eclipse/refs/heads/main/Assets/Icons/Guilded/Guilded%20-%20Gold%20Reddit%20Icon%20v1.png',\n  },\n};\n\nif (image_url) {\n  embed.image = {\n    url: image_url,\n  };\n}\nif(snippet.trim() !== \"\"){\n  embed.description = snippet.trim();\n}\n\nembed.title = $(\"RSS Feed Trigger\").first().json.title;\n\nconst body = {\n  embeds: [embed],\n};\n\nreturn { body };"
      },
      "id": "fce33f4c-5de2-4322-8e95-212cedafafaa",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1260,
        580
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyHour",
              "minute": 30
            }
          ]
        },
        "feedUrl": "https://www.reddit.com/r/PunishingGrayRaven/hot/.rss"
      },
      "id": "ca9d105a-af0a-4957-b10f-b49659fec6f1",
      "name": "RSS Feed Trigger",
      "type": "n8n-nodes-base.rssFeedReadTrigger",
      "typeVersion": 1,
      "position": [
        720,
        580
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Reddit API GET Request - User Icon URL": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TextManipulation": {
      "main": [
        [
          {
            "node": "Reddit API GET Request - User Icon URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Feed Trigger": {
      "main": [
        [
          {
            "node": "TextManipulation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "timezone": "America/Mexico_City",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v1"
  },
  "versionId": "8816adf3-5270-4143-b855-6efe13958d2f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f3e8646dc25bb703680f7fd48308e56289d71dc10dc3ea0c5d57254342b6a676"
  },
  "id": "48",
  "tags": []
}